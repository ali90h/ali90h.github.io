(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const l of o)if(l.type==="childList")for(const d of l.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&a(d)}).observe(document,{childList:!0,subtree:!0});function n(o){const l={};return o.integrity&&(l.integrity=o.integrity),o.referrerPolicy&&(l.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?l.credentials="include":o.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function a(o){if(o.ep)return;o.ep=!0;const l=n(o);fetch(o.href,l)}})();const u=document.documentElement,b=document.getElementById("announce");function i(e){u.setAttribute("data-mode",e),localStorage.setItem("mode",e),b&&(b.textContent=`mode: ${e}`),document.querySelectorAll("[data-set-mode]").forEach(t=>t.setAttribute("aria-pressed",String(t.dataset.setMode===e)))}function f(e){var t;u.setAttribute("data-calm",String(e)),localStorage.setItem("calm",String(e)),(t=document.getElementById("calm"))==null||t.setAttribute("aria-pressed",String(e))}i(localStorage.getItem("mode")||"object");f(localStorage.getItem("calm")==="true");for(const e of document.querySelectorAll("[data-set-mode]"))e.addEventListener("click",()=>i(e.dataset.setMode));var k;(k=document.getElementById("calm"))==null||k.addEventListener("click",()=>f(u.getAttribute("data-calm")!=="true"));for(const e of document.querySelectorAll("[data-preview-mode]")){let t=null;const n=e.getAttribute("data-preview-mode");e.addEventListener("mouseenter",()=>{const a=u.getAttribute("data-mode");i(n),t=window.setTimeout(()=>a&&i(a),1200*Number(getComputedStyle(u).getPropertyValue("--motion-scale")||1))}),e.addEventListener("mouseleave",()=>{t&&(clearTimeout(t),t=null)}),e.addEventListener("click",()=>{localStorage.setItem("mode",n)})}let m=!1;window.addEventListener("keydown",e=>{if(e.key==="?"||e.shiftKey&&e.key==="/"){e.preventDefault(),I();return}if(e.key==="n"||e.key==="N"){i("nothing");return}if(e.key==="o"||e.key==="O"){i("object");return}if(e.key==="1"){i("noone");return}if(e.key==="c"||e.key==="C"){f(u.getAttribute("data-calm")!=="true");return}if(e.key==="g"){m=!0;return}if(m&&(e.key==="w"&&(location.href="/work.html"),e.key==="l"&&(location.href="/log.html"),e.key==="a"&&(location.href="/about.html"),m=!1),e.key==="/"){const t=document.getElementById("filter");t&&(e.preventDefault(),t.focus())}});function I(){var e;(e=document.getElementById("help"))==null||e.classList.toggle("active")}(async function(){var p,y,h;const t=await fetch("/data/github.json").catch(()=>null),n=t&&t.ok?await t.json():{facts:{},work:[],log:[]},a=document.getElementById("portals");if(a){const s=[{href:"/work.html",title:"work",fact:String(((p=n==null?void 0:n.work)==null?void 0:p.length)||0)},{href:"/log.html",title:"log",fact:((y=n==null?void 0:n.facts)==null?void 0:y.lastEvent)||""},{href:"/about.html",title:"about",fact:"now"}];a.innerHTML=s.map(r=>`
      <a class="card" href="${r.href}">
        <h3>${r.title}</h3>
        <p class="fact mono">${r.fact}</p>
      </a>`).join("")}const o=document.getElementById("work-grid");if(o){const s=n.work||[],r=document.getElementById("filter"),v=()=>{const w=((r==null?void 0:r.value)||"").trim(),L=w?s.filter(c=>{var E;return(E=c.type)==null?void 0:E.includes(w)}):s;o.innerHTML=L.map(c=>`
        <div class="card">
          <h3>${c.repo}</h3>
          <p>${c.oneLine}</p>
          <p class="muted mono">${c.latest||""}</p>
          <span class="lang">${c.language||""}</span>
          <div class="cta"><a href="https://github.com/${c.repo}">open repo</a></div>
        </div>`).join("")};r==null||r.addEventListener("input",v),v()}const l=document.getElementById("log"),d=document.getElementById("log-empty");if(l){const s=(n.log||[]).slice(0,8);!s.length&&d&&(d.hidden=!1),l.innerHTML=s.map(r=>`
      <li><span class="mono">â€º</span> <a href="${r.url}">${r.title}</a>
        <span class="badge mono">${r.repo}</span> <span class="muted">${r.date}</span></li>`).join("")}const g=document.getElementById("now");g&&(g.innerHTML=(((h=n==null?void 0:n.facts)==null?void 0:h.now)||["AutoRepro"]).map(s=>`<li>${s}</li>`).join(""))})();
